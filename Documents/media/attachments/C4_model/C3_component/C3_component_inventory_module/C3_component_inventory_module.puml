@startuml PineConePro_ERPIMS_C3_InventoryModule
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

Person(warehouseAssoc, "Warehouse Associate", "Executes receiving, put-away, picking, cycle counts via RF")
Person(opsManager, "Operations Manager", "Configures zones, monitors KPIs, resolves exceptions")

Container_Boundary(invBoundary, "Inventory & Warehouse Module") {
  Component(invController, "InventoryController", "ASP.NET Core", "RF & UI endpoints for inventory transactions, bin lookup, adjustments")
  Component(invAppService, "InventoryApplicationService", "Application layer", "Coordinates RF workflows, validations, event orchestration")
  Component(invValidator, "InventoryValidator", "FluentValidation", "Validates bin, lot/serial, zone rules, user permissions")
  Component(receiveWorkflow, "Receiving Workflow", "Domain service", "Handles ASN matching, lot capture, quality holds")
  Component(putawayPolicy, "Put-away Policy Engine", "Rules engine", "Determines optimal bins using slotting strategies (ABC analysis, velocity, size, hazmat)")
  Component(pickingPolicy, "Picking Policy Engine", "Rules engine", "Supports FEFO/FIFO, wave, zone, and batch picking strategies")
  Component(valuationService, "InventoryValuationService", "Domain service", "Manages inventory costing (FIFO, LIFO, weighted average) and COGS updates")
  Component(inventoryAggregate, "InventoryItem Aggregate", "Domain model", "Manages on-hand, reserved, ATP per location/bin")
  Component(lotAggregate, "Lot Aggregate", "Domain model", "Tracks lot attributes, expiry, supplier provenance")
  Component(serialAggregate, "Serial Aggregate", "Domain model", "Records serial lifecycle, warranty, customer assignment")
  Component(invRepository, "InventoryRepository", "EF Core repository", "Persists inventory, lot, serial, task aggregates")
  Component(invReadModel, "InventoryReadModel", "CQRS read store", "Provides ATP views, bin heatmaps, cycle count dashboards")
  Component(eventPublisher, "InventoryEventPublisher", "Event dispatcher", "Publishes domain events to in-process bus and integration events to external broker")
  Component(analyticsEmitter, "OpsMetricsEmitter", "Telemetry", "Sends KPIs (inventory accuracy, throughput, dwell time)")
  Component(cycleCountScheduler, "CycleCount Scheduler", "Background worker", "Generates cycle count tasks based on ABC frequency")
  Component(reorderSignal, "Replenishment Signal Service", "Domain service", "Computes reorder point breaches, triggers purchasing events")
}

ContainerDb(sqlDb, "Operational Database", "Azure Database for PostgreSQL", "Inventory, lot, serial schemas")
Container(cache, "Redis Cache", "Azure Cache for Redis", "Bin-level snapshots, RF session state")
Container(queue, "External Message Broker", "Azure Service Bus", "Integration events for external systems (e.g., 3PL)")
Container(blob, "Document Store", "Azure Blob Storage", "Receiving documents, inspection photos")
System_Ext(orderModule, "Order Module", "Consumes inventory events (ATP, picks) via in-process bus")
System_Ext(purchModule, "Purchasing Module", "Receives replenishment signals & ASN updates via in-process bus")
System_Ext(shippingModule, "Shipping Module", "Consumes pick completion events via in-process bus")
System_Ext(productModule, "Product Module", "Provides SKU setup, kits, hazmat info")
System_Ext(threePL, "3PL Provider", "Syncs inventory, receiving, shipments")
System_Ext(rfDevices, "RF Handhelds / Tablets", "Consume tasks, submit scans")
System_Ext(observability, "Observability Stack", "Metrics, logs, tracing")

Rel(warehouseAssoc, rfDevices, "Uses for scanning")
Rel(rfDevices, invController, "REST/JSON calls, WebSocket updates")
Rel(opsManager, invController, "Configure bins, review dashboards")

Rel(invController, invAppService, "Orchestrate workflow")
Rel(invAppService, invValidator, "Validate inputs")
Rel(invAppService, receiveWorkflow, "Match ASN, capture quality holds")
Rel(invAppService, putawayPolicy, "Recommend bins")
Rel(invAppService, pickingPolicy, "Generate pick waves")
Rel(invAppService, valuationService, "Calculate inventory value and COGS")
Rel(invAppService, inventoryAggregate, "Update on-hand, reserved")
Rel(invAppService, lotAggregate, "Capture lot, expiry")
Rel(invAppService, serialAggregate, "Register serials")
Rel(invAppService, eventPublisher, "Publish inventory events")
Rel(invAppService, invReadModel, "Query ATP, heatmaps")
Rel(invAppService, cache, "Cache RF tasks, bin stats")
Rel(invAppService, blob, "Attach inspection photos, docs")

Rel(inventoryAggregate, invRepository, "Persist state")
Rel(lotAggregate, invRepository, "Persist lot data")
Rel(serialAggregate, invRepository, "Persist serial data")
Rel(invRepository, sqlDb, "Save/load data")
Rel(invReadModel, sqlDb, "Materialized views")

Rel(inventoryAggregate, eventPublisher, "Emit domain events")
Rel(lotAggregate, eventPublisher, "Emit lot events")
Rel(serialAggregate, eventPublisher, "Emit serial events")
Rel(reorderSignal, eventPublisher, "Publish reorder events")

Rel(eventPublisher, queue, "Publish integration events for 3PL")
Rel(queue, threePL, "Asynchronous inventory updates")

Rel(cycleCountScheduler, invAppService, "Trigger cycle count task creation")

Rel(analyticsEmitter, observability, "Send metrics, alerts")
Rel(invAppService, analyticsEmitter, "Feed KPIs, SLA stats")
Rel(invController, observability, "Request/latency telemetry")

' Relationships to other internal modules are via the in-process event bus
' (consumed by Order, Purchasing, Shipping modules as described in their definitions)
' Product module data is consumed via its public API or read model, not events.
Rel(invAppService, productModule, "Use product weights, hazmat info")

@enduml
