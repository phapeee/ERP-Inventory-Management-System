@startuml PineConePro_ERPIMS_C3_OrderModule
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

Container_Boundary(orderBoundary, "Orders & Fulfillment Module") {
  Component(orderController, "OrderController", "ASP.NET Core", "REST endpoints for order lifecycle, SLA metrics")
  Component(orderAppService, "OrderApplicationService", "Application layer", "Coordinates validation, domain commands, saga orchestration")
  Component(orderValidator, "OrderValidator", "FluentValidation", "Validates customer, payment, inventory rules")
  Component(orderDomain, "Order Aggregate", "Domain model", "Encapsulates order state transitions, domain logic")
  Component(rmaDomain, "RMA Aggregate", "Domain model", "Handles return authorizations, dispositions")
  Component(paymentPolicy, "PaymentPolicy", "Domain policy", "Decides auth vs capture, fraud workflow")
  Component(allocationPolicy, "AllocationPolicy", "Domain policy", "Allocates inventory, reserves bins, backorder logic")
  Component(orderRepository, "OrderRepository", "EF Core repository", "Persists order, shipment, RMA aggregates")
  Component(orderReadModel, "OrderReadModel", "CQRS read store", "Materialized views for dashboards, SLAs")
  Component(eventPublisher, "OrderEventPublisher", "Event dispatcher", "Publishes OrderCreated, OrderPaid, OrderFulfilled events")
  Component(integrationFacade, "IntegrationFacades", "Adapters", "Payment, Inventory, Shipping, Tax, Accounting facades")
  Component(sagaCoordinator, "FulfillmentSaga", "Stateful workflow", "Coordinates long-running processes (payment, picking, shipping)")
  Component(auditLogger, "AuditLogger", "Telemetry", "Captures audit logs, metrics, traces for compliance")
}

Person_Ext(spaUser, "SPA / RF Client", "Places orders, manages returns")
ContainerDb(sqlDb, "Operational Database", "Azure SQL", "Orders, RMAs, shipments schema")
Container(cache, "Redis Cache", "Azure Cache for Redis", "Hot order lookups, session state")
Container(queue, "Azure Service Bus", "Topics/Queues", "Async events & integration commands")
System_Ext(paymentGateway, "Payment Gateway", "Authorize/capture payments, fraud checks")
System_Ext(inventoryModule, "Inventory Module", "Reserve/release stock, pick tasks")
System_Ext(shippingModule, "Shipping Module", "Label generation, shipment dispatch")
System_Ext(taxModule, "Tax Module", "Tax calculation, compliance")
System_Ext(accountingModule, "Tax & Accounting Module", "Journal posting, AR entry")

Rel(spaUser, orderController, "REST/JSON requests")
Rel(orderController, orderAppService, "Issue application commands")
Rel(orderAppService, orderValidator, "Validate DTOs, business rules")
Rel(orderAppService, orderDomain, "Invoke domain behaviors")
Rel(orderAppService, rmaDomain, "Handle returns lifecycle")
Rel(orderAppService, allocationPolicy, "Request ATP & reservation decisions")
Rel(orderAppService, paymentPolicy, "Select payment flow")
Rel(orderDomain, orderRepository, "Persist aggregate")
Rel(rmaDomain, orderRepository, "Persist RMA")
Rel(orderRepository, sqlDb, "Save/load aggregates")
Rel(orderReadModel, sqlDb, "Read projections")
Rel(orderAppService, orderReadModel, "Query read models")
Rel(orderAppService, cache, "Cache hot orders")
Rel(orderAppService, integrationFacade, "Invoke external adapters")
Rel(integrationFacade, paymentGateway, "Authorize, capture, refund")
Rel(integrationFacade, inventoryModule, "Reserve/release stock", "Domain events / API")
Rel(integrationFacade, shippingModule, "Create shipment, label")
Rel(integrationFacade, taxModule, "Calculate tax, commit")
Rel(integrationFacade, accountingModule, "Post AR, revenue")
Rel(orderDomain, eventPublisher, "Emit domain events")
Rel(rmaDomain, eventPublisher, "Emit RMA events")
Rel(eventPublisher, queue, "Publish OrderCreated, OrderPaid, RmaCreated")
Rel(queue, integrationFacade, "Handle async callbacks")
Rel(sagaCoordinator, integrationFacade, "Await/coordinate async tasks")
Rel(orderAppService, sagaCoordinator, "Start/advance saga steps")
Rel(sagaCoordinator, orderDomain, "Apply saga outcomes")
Rel(orderAppService, auditLogger, "Emit audit, metrics")
Rel(auditLogger, queue, "Forward to observability pipeline")

@enduml
