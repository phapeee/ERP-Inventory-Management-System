@startuml PineConePro_ERPIMS_C3_TaxAccountingModule
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

Person(accountant, "Accountant", "Runs tax reports, posts journals, reconciles AP/AR")
Person(owner, "Owner / GM", "Reviews financial dashboards, approvals")

Container_Boundary(taxBoundary, "Tax & Accounting Module") {
  Component(taxController, "TaxAccountingController", "ASP.NET Core", "REST endpoints for tax calculations, journal review, postings")
  Component(taxAppService, "TaxAccountingApplicationService", "Application layer", "Orchestrates tax calc, ledger postings, sync jobs")
  Component(taxCalculator, "Tax Calculation Service", "Domain service", "Computes jurisdictional tax, exemptions, hazmat fees")
  Component(ledgerPolicy, "Ledger Mapping Policy", "Rules engine", "Maps transactions to GL accounts, cost centers")
  Component(taxAggregate, "TaxTransaction Aggregate", "Domain model", "Captures tax lines, liability, filing status")
  Component(journalAggregate, "JournalEntry Aggregate", "Domain model", "Represents balanced debits/credits, approval state")
  Component(reconService, "Reconciliation Service", "Domain service", "Compares ERP sub-ledger vs external accounting balances")
  Component(exportScheduler, "Export & Filing Scheduler", "Background worker", "Schedules tax filing exports, GL sync jobs")
  Component(taxRepository, "TaxRepository", "EF Core repository", "Persists tax transactions, filings, journal entries")
  Component(taxReadModel, "FinanceReadModel", "CQRS read store", "Provides dashboards for tax liability, GL status")
  Component(integrationAdapters, "Integration Adapters", "Adapters", "Connectors to external tax engine, accounting system")
  Component(eventPublisher, "FinanceEventPublisher", "Event dispatcher", "Emits tax-calculated, journal-posted, reconciliation-failed")
  Component(analyticsEmitter, "FinanceMetricsEmitter", "Telemetry", "Publishes KPIs: tax liability, close status, sync latency")
  Component(auditTrail, "FinanceAuditTrail", "Audit service", "Records approvals, adjustments, filings for compliance")
}

ContainerDb(sqlDb, "Operational Database", "Azure SQL", "Tax & finance schema")
Container(queue, "Azure Service Bus", "Topics/Queues", "Finance events, integration commands")
System_Ext(orderModule, "Order Module", "Requests tax calc, posts revenue")
System_Ext(shippingModule, "Shipping Module", "Provides freight, hazmat fees")
System_Ext(purchModule, "Purchasing Module", "Feeds vendor bills, accruals")
System_Ext(paymentGateway, "Payment Gateway", "Provides settlement info for reconciliation")
System_Ext(accountingSystem, "Accounting System", "QuickBooks/NetSuite GL")
System_Ext(taxService, "External Tax Service", "Real-time tax rates, filings")
System_Ext(observability, "Observability Stack", "Metrics, logs, alerts")
System_Ext(compliancePortal, "Compliance Filing Portal", "Exports for tax filings, audits")

Rel(accountant, taxController, "Review/post journals, run reports")
Rel(owner, taxController, "Review KPIs, approve adjustments")

Rel(taxController, taxAppService, "Execute workflows")
Rel(taxAppService, taxCalculator, "Compute sales tax, exemptions")
Rel(taxAppService, ledgerPolicy, "Determine account mappings")
Rel(taxAppService, taxAggregate, "Capture tax transactions")
Rel(taxAppService, journalAggregate, "Create/update journal entries")
Rel(taxAggregate, taxRepository, "Persist tax data")
Rel(journalAggregate, taxRepository, "Persist journals")
Rel(taxRepository, sqlDb, "Save/load records")
Rel(taxAppService, taxReadModel, "Query dashboards")
Rel(taxReadModel, sqlDb, "Read projections")
Rel(taxAppService, exportScheduler, "Schedule filings, sync jobs")
Rel(exportScheduler, queue, "Enqueue sync tasks")
Rel(exportScheduler, compliancePortal, "Generate export files")
Rel(reconService, accountingSystem, "Fetch balances, transactions")
Rel(taxAppService, reconService, "Run reconciliations")
Rel(reconService, taxReadModel, "Update recon status")
Rel(taxAppService, integrationAdapters, "Call external connectors")
Rel(integrationAdapters, taxService, "Tax calc, commit, filing status")
Rel(integrationAdapters, accountingSystem, "Post journal entries, fetch status")
Rel(eventPublisher, queue, "Publish finance events")
Rel(taxAggregate, eventPublisher, "Emit tax-calculated")
Rel(journalAggregate, eventPublisher, "Emit journal-posted")
Rel(queue, accountingSystem, "Async sync commands, ack events")
Rel(queue, orderModule, "Notify tax updates, journal status")
Rel(queue, purchModule, "Notify accrual postings")
Rel(queue, shippingModule, "Notify freight journal entries")
Rel(taxAppService, paymentGateway, "Retrieve settlement batches")
Rel(taxAppService, auditTrail, "Record approvals, filings")
Rel(auditTrail, observability, "Expose audit logs, alerts")
Rel(taxAppService, analyticsEmitter, "Emit finance KPIs")
Rel(analyticsEmitter, observability, "Publish metrics")
Rel(taxController, observability, "Telemetry, audit logs")
Rel(integrationAdapters, observability, "Integration health data")

@enduml
