@startuml PineConePro_ERPIMS_C3_HighLevel
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

' Actors
Person(itAdmin, "IT Admin", "Manages configuration, RBAC, deployments")
Person(csr, "Customer Service Rep", "Handles orders, RMAs")
Person(warehouseAssoc, "Warehouse Associate", "Executes RF-driven tasks")
Person(purchasingLead, "Purchasing Lead", "Plans replenishment, approves POs")
Person(accountant, "Accountant", "Posts journals, runs tax reports")

' System Boundary
Container_Boundary(appBoundary, "ERP Modular Monolith API") {
  ' Cross-cutting components
  Component(restApi, "API Gateway Controllers", "ASP.NET Core", "REST endpoints for all modules")
  Component(authz, "Identity & RBAC Filter", "ASP.NET middleware", "Validates tokens and enforces module permissions")
  Component(eventHub, "In-Process Event Bus", "MediatR / Rebus", "Handles pub/sub communication between modules")
  Component(integrationLayer, "Integration Adapter Layer", "Adapter services", "Connects to all external systems (payment, tax, carriers, etc.)")
  Component(backgroundJobs, "Workflow & Batch Workers", "Hangfire / Azure WebJobs", "Handles async tasks, scheduled jobs, and long-running workflows")
  Component(persistence, "Persistence Layer", "EF Core + Repositories", "Manages data access and caching for all modules")

  ' Core Modules (as defined in module_specifications.md)
  Component(pimModule, "1. Product Information Management (PIM)", "DDD Module", "Manages SKUs, kits, bundles, and hazardous material attributes.")
  Component(inventoryModule, "2. Inventory & Warehouse Management", "DDD Module", "Manages multi-warehouse stock levels, bin locations, and cycle counting.")
  Component(orderRmaModule, "3. Orders & RMA", "DDD Module", "Manages the full lifecycle of orders, returns, fulfillment, and refunds.")
  Component(purchasingModule, "4. Purchasing & Vendor Management", "DDD Module", "Manages requisitions, purchase orders, and vendor relationships.")
  Component(shippingModule, "5. Shipping & Hazmat", "DDD Module", "Manages rate shopping, label generation, and hazardous material documentation.")
  Component(taxModule, "6. Tax & Reporting", "DDD Module", "Manages sales tax calculation and integration with tax services.")
  Component(accountingModule, "7. Accounting Sync", "DDD Module", "Synchronizes financial data (GL, AP, AR) with the external accounting system.")
  Component(analyticsModule, "8. Operational Analytics & Alerts", "DDD Module", "Aggregates data for KPIs, dashboards, and operational alerts.")
}

' External Systems & Storage
ContainerDb(sqlDb, "Operational Database", "Azure Database for PostgreSQL", "Transactional data store for all modules")
Container(cache, "Redis Cache", "Azure Cache for Redis", "Low-latency reads, session caching")
Container(extQueue, "External Event Bus", "Azure Service Bus", "Asynchronous messages for external integrations (e.g., 3PL)")
Container(blob, "Document Store", "Azure Blob Storage", "Stores attachments, hazmat docs, inspection photos")
System_Ext(paymentGateway, "Payment Gateway", "Third-party payments & fraud")
System_Ext(taxService, "Tax Service", "Sales tax calculation/filings")
System_Ext(carriers, "Carrier APIs", "Shipping rates, labels, tracking")
System_Ext(accountingSystem, "Accounting System", "GL/AP/AR platform")
System_Ext(threePL, "3PL Provider", "Warehouse partner integration")
System_Ext(observability, "Observability Stack", "Azure Monitor/App Insights")

' Relationships

' User -> System
Rel(csr, restApi, "Invoke order, customer, and RMA workflows")
Rel(warehouseAssoc, restApi, "Execute inventory tasks via RF device")
Rel(purchasingLead, restApi, "Manage vendors and purchase orders")
Rel(accountant, restApi, "Manage financial data and reports")
Rel(itAdmin, restApi, "Manage system configuration")
Rel(itAdmin, authz, "Manages RBAC policies")

' API -> Internal Components
Rel(restApi, authz, "Authenticate & authorize all requests")
Rel(restApi, pimModule, "Invoke workflows")
Rel(restApi, inventoryModule, "Invoke workflows")
Rel(restApi, orderRmaModule, "Invoke workflows")
Rel(restApi, purchasingModule, "Invoke workflows")
Rel(restApi, shippingModule, "Invoke workflows")
Rel(restApi, taxModule, "Invoke workflows")
Rel(restApi, accountingModule, "Invoke workflows")
Rel(restApi, analyticsModule, "Query dashboards")

' Module -> Data & Events
' (All modules use these common services)
Rel_Neighbor(pimModule, eventHub, "Publish/subscribe internal events")
Rel_Neighbor(inventoryModule, eventHub, "")
Rel_Neighbor(orderRmaModule, eventHub, "")
Rel_Neighbor(purchasingModule, eventHub, "")
Rel_Neighbor(shippingModule, eventHub, "")
Rel_Neighbor(taxModule, eventHub, "")
Rel_Neighbor(accountingModule, eventHub, "")
Rel_Neighbor(analyticsModule, eventHub, "")

Rel(persistence, sqlDb, "Read/write data")
Rel(persistence, cache, "Read/write cache")
Rel(persistence, blob, "Read/write documents")

' All modules use the persistence layer
Rel(pimModule, persistence, "Uses")
Rel(inventoryModule, persistence, "Uses")
Rel(orderRmaModule, persistence, "Uses")
Rel(purchasingModule, persistence, "Uses")
Rel(shippingModule, persistence, "Uses")
Rel(taxModule, persistence, "Uses")
Rel(accountingModule, persistence, "Uses")
Rel(analyticsModule, persistence, "Uses")

' Background Jobs -> Services
Rel(backgroundJobs, eventHub, "Trigger/subscribe to events for async workflows")
Rel(backgroundJobs, integrationLayer, "Trigger external sync jobs")

' Integration Layer -> External Systems
Rel(integrationLayer, paymentGateway, "Processes payments")
Rel(integrationLayer, taxService, "Calculates tax")
Rel(integrationLayer, carriers, "Manages shipments")
Rel(integrationLayer, accountingSystem, "Syncs financials")
Rel(integrationLayer, threePL, "Syncs inventory & shipments")
Rel(integrationLayer, extQueue, "Publish/subscribe to external async messages")

' Telemetry
Rel(restApi, observability, "Logs, traces, metrics")
Rel(backgroundJobs, observability, "Job telemetry")
Rel(integrationLayer, observability, "Integration health")

@enduml