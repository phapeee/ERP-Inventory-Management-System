@startuml PineConePro_ERPIMS_C3_AnalyticsModule
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

' Actors
Person(owner, "Owner / GM", "Reviews executive dashboards, KPIs")
Person(opsManager, "Operations Manager", "Monitors operational KPIs, alerts")
Person(purchasingLead, "Purchasing Lead", "Tracks vendor performance, stock health")
Person(accountant, "Accountant", "Monitors financial KPIs, compliance")

Container_Boundary(analyticsBoundary, "Operational Analytics & Alerts Module") {
  Component(analyticsController, "AnalyticsController", "ASP.NET Core", "REST endpoints for dashboards, reports, alert configuration")
  Component(analyticsAppService, "AnalyticsApplicationService", "Application Layer", "Handles user requests for dashboards and reports")

  ' ELT Pipeline Components
  Component(eventHandler, "AnalyticsEventHandler", "Event Subscriber", "E/L: Subscribes to the in-process bus and loads raw event data into staging tables")
  Component(transformService, "TransformationService", "Background Worker", "T: Periodically transforms staged data into query-optimized, aggregated models")
  
  ' Feature Components
  Component(alertingService, "AlertingService", "Background Worker", "Periodically checks alert rules against aggregated data and sends notifications")
  Component(reportingService, "ReportingService", "Domain Service", "Generates ad-hoc reports, running asynchronously for large datasets")

  ' Persistence Components
  Component(configRepository, "ConfigRepository", "EF Core Repository", "Persists configuration entities like Dashboard, AlertRule, and ReportDefinition")
  Component(reportingDb, "ReportingDataStore", "Dapper / EF Core", "Provides read access to staging/aggregated data in the reporting schema. Handles writes for E/L/T processes.")
}

' External Dependencies
ContainerDb(db, "Operational Database", "Azure Database for PostgreSQL", "Contains a dedicated schema for reporting (staging & aggregated tables) and a schema for analytics configuration")
Container(bus, "In-Process Event Bus", "MediatR / Rebus", "Receives events from all operational modules")
System_Ext(operationalModules, "Operational Modules", "PIM, Inventory, Orders, etc.", "Publish domain events")
System_Ext(observability, "Observability Stack", "Azure Monitor/App Insights", "Receives logs and metrics")
System_Ext(biTool, "External BI Tool", "Power BI / Tableau", "Can connect via a data export API")
System_Ext(notificationGateway, "Notification Gateway", "System-wide adapter for Email/SMS", "Sends alerts to users")


' Relationships

' Actors -> System
Rel(owner, analyticsController, "View dashboards")
Rel(opsManager, analyticsController, "View dashboards, manage alerts")
Rel(purchasingLead, analyticsController, "View dashboards")
Rel(accountant, analyticsController, "View dashboards")

' API Flow
Rel(analyticsController, analyticsAppService, "Handle user requests")
Rel(analyticsAppService, reportingDb, "Query aggregated data for dashboards")
Rel(analyticsAppService, configRepository, "Read/write dashboard and alert configurations")
Rel(analyticsAppService, reportingService, "Generate ad-hoc reports")

' ELT Data Pipeline Flow
Rel(operationalModules, bus, "Publish domain events")
Rel(eventHandler, bus, "Subscribes to events")
Rel(eventHandler, reportingDb, "Load raw event data into staging tables")
Rel(transformService, reportingDb, "Read from staging, write to aggregated models")

' Alerting Flow
Rel(alertingService, reportingDb, "Read aggregated data to check rules")
Rel(alertingService, notificationGateway, "Send alert notifications")

' Persistence
Rel(configRepository, db, "Read/write configuration data")
Rel(reportingDb, db, "Read/write reporting data")

' Other External Integrations
Rel(analyticsAppService, biTool, "Expose data export API")
Rel(analyticsAppService, observability, "Publish logs and metrics")

@enduml
