@startuml C4_Code_Shipping_Module
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

Container_Boundary(shippingModule, "Shipping & Hazmat Module") {

    Container(shippingController, "ShippingController", "ASP.NET Core Controller", "Exposes RESTful endpoints for shipping operations (rate shopping, label generation, tracking).")

    Container(shippingAppService, "ShippingApplicationService", "C# Class", "Orchestrates shipping use cases, handling application logic and transaction management.")

    Container(shipmentAggregate, "ShipmentAggregate", "C# Class", "The root entity of the Shipment aggregate, encapsulating all business logic related to a shipment.")

    Container(rateShoppingService, "RateShoppingService", "C# Class", "A domain service responsible for comparing carrier rates and selecting the best option.")

    Container(hazmatValidationService, "HazmatValidationService", "C# Class", "A domain service for validating hazmat compliance for a shipment.")

    Container(shippingRepository, "IShippingRepository", "C# Interface", "Defines the contract for persistence of the Shipment aggregate.")

    Container(shippingRepositoryImpl, "ShippingRepository", "C# Class", "Implements the IShippingRepository interface using Entity Framework Core.")

    Container(carrierAdapter, "ICarrierAdapter", "C# Interface", "Defines the contract for communicating with external shipping carriers.")

    Container(carrierAdapterImpl, "CarrierAdapter", "C# Class", "Implements the ICarrierAdapter interface, integrating with a multi-carrier shipping API.")

    Container(eventPublisher, "IEventPublisher", "C# Interface", "Defines the contract for publishing domain events.")

    Container(eventPublisherImpl, "EventPublisher", "C# Class", "Implements the IEventPublisher interface, publishing events to the in-process event bus.")

}

System_Ext(user, "User", "Warehouse Associate, Operations Manager")
System_Ext(orderModule, "Order Module", "Provides order information for shipping.")
System_Ext(carrierApis, "Carrier APIs", "External APIs of shipping carriers (e.g., UPS, FedEx).")
System_Ext(eventBus, "In-Process Event Bus", "The mechanism for inter-module communication.")
System_Ext(database, "Database", "The underlying database for the ERP system.")

Rel(user, shippingController, "Initiates shipping operations via UI", "HTTPS")
Rel(shippingController, shippingAppService, "Forwards requests to", "C#")
Rel(shippingAppService, shipmentAggregate, "Works with", "C#")
Rel(shippingAppService, rateShoppingService, "Uses", "C#")
Rel(shippingAppService, hazmatValidationService, "Uses", "C#")
Rel(shippingAppService, shippingRepository, "Uses", "C#")
Rel(shippingAppService, carrierAdapter, "Uses", "C#")
Rel(shippingAppService, eventPublisher, "Uses", "C#")
Rel(shippingRepositoryImpl, database, "Reads/writes", "SQL")
Rel(carrierAdapterImpl, carrierApis, "Calls", "HTTPS/JSON")
Rel(eventPublisherImpl, eventBus, "Publishes to", "C#")
Rel(shippingAppService, orderModule, "Subscribes to OrderReadyForShipping event from", "via Event Bus")

@enduml