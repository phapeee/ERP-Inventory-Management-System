@startuml PineConePro_ERPIMS_C4_TaxAccountingModule
!include ../C4_Code.puml

LAYOUT_WITH_LEGEND()

Boundary(taxApi, "API Layer") {
  Code(taxController, "TaxAccountingController", "ASP.NET Core Controller", "Expose tax calc, journal review, posting endpoints.")
  Code(financeBatchController, "FinanceBatchController", "ASP.NET Core Controller", "Manage export runs, reconciliation jobs.")
}

Boundary(taxApp, "Application Layer") {
  Code(taxAppService, "TaxAccountingApplicationService", "Service", "Coordinates tax calculation, ledger posting, reconciliation.")
  Code(journalAppService, "JournalApplicationService", "Service", "Manages journal lifecycle, approvals, batching.")
  Code(reconAppService, "ReconciliationService", "Service", "Compares ERP vs accounting system, raises discrepancies.")
  Code(taxRequestValidator, "TaxRequestValidator", "FluentValidation", "Validates tax input (addresses, product tax codes, exemptions).")
  Code(journalValidator, "JournalValidator", "FluentValidation", "Ensures balanced entries, valid accounts, approval compliance.")
  Code(exportJobScheduler, "ExportJobScheduler", "Workflow", "Schedules filing exports, GL sync jobs, monitors completion.")
}

Boundary(taxDomain, "Domain Layer") {
  Code(taxTransaction, "TaxTransactionAggregate", "DDD Aggregate", "Stores tax lines, liability, filing status, audit trail.")
  Code(journalEntry, "JournalEntryAggregate", "DDD Aggregate", "Represents balanced debits/credits, approval states.")
  Code(ledgerMapping, "LedgerMappingPolicy", "Domain Policy", "Maps business events to GL accounts, cost centers.")
  Code(taxRateCache, "TaxRateCache", "Value Object", "Holds loaded tax rates, boundary tests, expiry.")
  Code(taxEvents, "FinanceDomainEvents", "Event Definitions", "tax-calculated, journal-posted, reconciliation-failed, filing-generated.")
}

Boundary(taxInfra, "Infrastructure & Integration") {
  Code(taxRepository, "TaxRepository", "EF Core Repository", "Persists tax transactions, journals, filing records.")
  Code(journalRepository, "JournalRepository", "EF Core Repository", "Stores approved journals awaiting export.")
  Code(financeReadProjector, "FinanceReadProjector", "Projection", "Builds finance dashboards, liability summaries, close checklists.")
  Code(taxServiceClient, "ExternalTaxServiceClient", "Adapter", "Calls external tax API for calculations, commits, filings.")
  Code(accountingClient, "AccountingSystemClient", "Adapter", "Posts journals, fetches balances from GL system.")
  Code(paymentReconciliationClient, "PaymentGatewayReconciliationClient", "Adapter", "Obtains settlement batches for reconciliation.")
  Code(taxExporter, "TaxReturnExporter", "Exporter", "Generates tax return files, uploads to compliance portal.")
  Code(journalPublisher, "JournalEventPublisher", "Event Publisher", "Emits journal events to Service Bus for other modules.")
  Code(taxEventPublisher, "TaxEventPublisher", "Event Publisher", "Publishes tax events (liability updates, filing status).")
  Code(financeCache, "FinanceCache", "Redis Cache", "Caches tax rates, GL account metadata, report filters.")
  Code(financeAuditTrail, "FinanceAuditTrail", "Audit Logger", "Records approvals, adjustments, exports for compliance.")
}

Rel(taxController, taxAppService, "Invokes")
Rel(financeBatchController, exportJobScheduler, "Schedules jobs")
Rel(taxAppService, taxRequestValidator, "Validates")
Rel(journalAppService, journalValidator, "Validates")
Rel(taxAppService, taxTransaction, "Mutates aggregate")
Rel(journalAppService, journalEntry, "Mutates aggregate")
Rel(taxAppService, ledgerMapping, "Determine accounts")
Rel(taxTransaction, taxRepository, "Persist")
Rel(journalEntry, journalRepository, "Persist")
Rel(taxRepository, financeReadProjector, "Trigger projection")
Rel(journalRepository, financeReadProjector, "Trigger projection")
Rel(financeReadProjector, financeCache, "Warm dashboards")
Rel(taxAppService, taxServiceClient, "External calculation/commit")
Rel(taxAppService, taxExporter, "Generate filings")
Rel(exportJobScheduler, taxExporter, "Run exports")
Rel(exportJobScheduler, accountingClient, "Schedule sync")
Rel(reconAppService, accountingClient, "Fetch balances")
Rel(reconAppService, paymentReconciliationClient, "Fetch settlements")
Rel(reconAppService, financeReadProjector, "Update reconciliation status")
Rel(taxAppService, journalPublisher, "Emit journal events")
Rel(taxAppService, taxEventPublisher, "Emit tax events")
Rel(journalEntry, journalEvents, "Emit events")
Rel(taxTransaction, taxEvents, "Emit events")
Rel(taxEvents, taxEventPublisher, "Dispatch")
Rel(financeAuditTrail, financeCache, "Invalidate snapshot")
Rel(taxAppService, financeAuditTrail, "Record actions")
Rel(journalAppService, financeAuditTrail, "Record approvals")
Rel(financeCache, taxController, "Serve quick reads")

@enduml
