name: Build

on:
  push:
    branches:
      - main

jobs:
  backend-build:
    name: Build and Analyze .NET with SonarQube
    runs-on: windows-latest
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONARQUBE_CS_API_KEY: ${{ secrets.SONARQUBE_CS_API_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu" # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"ERP-IMS" /d:sonar.token="${SONARQUBE_CS_API_KEY}" /d:sonar.host.url="${SONAR_HOST_URL}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${SONARQUBE_CS_API_KEY}"

  frontend-analysis:
    name: Analyze Frontend with SonarQube
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONARQUBE_TSJS_API_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install sonar CLI
        run: npm install -g @sonarsource/sonarqube-scan

      - name: Install dependencies
        working-directory: ERP_frontend
        run: npm ci

      - name: Run SonarQube scan (frontend)
        working-directory: ERP_frontend
        run: |
          sonar \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.token=${SONAR_TOKEN} \
            -Dsonar.projectKey=ERP-IMS-Frontend
