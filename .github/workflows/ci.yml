name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  backend:
    name: Backend (.NET)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ERP_backend
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          include-prerelease: true

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('ERP_backend/**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ERP-Inventory-Management-System.sln

      - name: Build
        run: dotnet build ERP-Inventory-Management-System.sln --configuration Release --no-restore

      - name: Test
        run: dotnet test ERP-Inventory-Management-System.sln --configuration Release --no-build --verbosity normal

  frontend:
    name: Frontend (Angular)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ERP_frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: ERP_frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Build
        run: npm run build
